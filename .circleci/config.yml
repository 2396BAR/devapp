    version: 2
jobs:
    build:
      docker:
      # specify the version you desire here
      -   image: node:latest

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # run tests!!
      - run: 
          name: Test App
          command: |
            yarn test

      - run:
          name: Copy deployment artifacts to workspace
          command: |
            cp build/libs/devapp-*.jar /tmp/standalone-app.jar
            cp .circleci/setup-heroku.sh /tmp/setup-heroku.sh

      - store_artifacts:
          path: /tmp/standalone-app.jar
  
      - persist_to_workspace:
                root: /tmp
                paths:
                  - standalone-app.jar
                  - setup-heroku.sh

 deploy-heroku:
    docker:
      - image: circleci/openjdk:8-jdk-browsers
    working_directory: ~/deploy
    steps:
      # why rebuild something we already tested, rebuilding invalidates any previous confidence?!
      - attach_workspace:
          at: /tmp

      - run:
          name: Run setup script
          command: bash /tmp/setup-heroku.sh
      - run:
          name: Heroku Deploy
          command: |
            cp /tmp/standalone-app.jar .
            ls -la
            heroku plugins:install heroku-cli-deploy
            heroku plugins:install heroku-cli-deploy  # when debugging on circle image, first run succeeded, but did not make plugin available
            heroku deploy:jar standalone-app.jar --app $HEROKU_APP_NAME
      - run:
          name: Smoke Test
          command: |
            # Heroku deploy command will pass even if application crashes. Simple smoke test to make sure app is up.
            HTTPCODE=`curl -s -o /dev/null -w "%{http_code}" https://$HEROKU_APP_NAME.herokuapp.com`
            if [ "$HTTPCODE" -ne 200 ];then
              echo "heroku app not responding, failing deploy"
              exit 1
            fi

workflows:
version: 2
  build-deploy:
    jobs:
      - build
      - deploy-heroku:
          requires:
            - build